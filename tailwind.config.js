/** @type {import('tailwindcss').Config} */
const defaultTheme = require("tailwindcss/defaultTheme");
module.exports = {
  darkMode: ["class"],
  content: [
    './pages/**/*.{ts,tsx}',
    './components/**/*.{ts,tsx}',
    './app/**/*.{ts,tsx}',
    './src/**/*.{ts,tsx}',
  ],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        xs: "300px",
        "web-hover": { raw: "(hover: hover)" },
        "2xl": "1400px",
        ...defaultTheme.screens,
      },
    },
    extend: {
      colors: {
        primary: "var(--color-primary)",
        secondary: "var(--color-secondary)",
        negative: "var(--color-negative)",
        positive: "var(--color-positive)",
        "primary-background": "var(--background-primary)",
        "sec-background": "var(--background-sec)",
        "primary-text": "var(--color-text-primary)",
        "secondary-text": "var(--color-text-secondary)",
        "hover-background": "var(--hover-background)",
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        // primary: {
        //   DEFAULT: "hsl(var(--primary))",
        //   foreground: "hsl(var(--primary-foreground))",
        // },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
        fade: "fadeIn 1s ease-in",
        fadeHeight: "fadeHeight .5s linear",
        "fade-in": "fade-in 2s ease-in",
        "slide-up": "slide-up 2s ease-in",
        "slide-down": "slide-down 2s ease-in",
      },
    },
    keyframes: (theme) => ({
      fadeIn: {
        "0%": {
          opacity: 0,
          // transform: 'translateY(40px)',
        },
        "100%": {
          opacity: 1,
          // transform: 'translateY(0)',
        },
      },
      fadeHeight: {
        "0%": {
          height: "0rem",
        },
        "100%": {
          height: "2rem",
        },
      },
      "slide-up": {
        "0%": { transform: "translateY(24px)", opacity: 0 },
        "100%": { transform: "translateY(0)", opacity: 1 },
      },
      "slide-down": {
        "0%": { transform: "translateY(-24px)", opacity: 0 },
        "100%": { transform: "translateY(0)", opacity: 1 },
      },
      "fade-in": {
        "0%": { opacity: 0 },
        "100%": { opacity: 1 },
      },
      drop: {
        "0%": { transform: "scale(1)" },
        "100%": { transform: "scale(1.05)" },
      },
    }),
    // Animation sequencing plugin options
    animationSequence: {
      // Utility will be generated using the [index + 1] of these delay values
      // sequence: ['0s', '.5s', '1s', '1.5s', '2s', '2.5s'],
      options: {
        delayMultiple: 0.5,
        maxSequences: 10,
        // Default animation duration for sequenced animations
        // can be overridden via animation-duration utilities generated by the plugin
        duration: "1s",
        // Default animation timing function for animations
        easing: "ease-in-out",
        // Default fill mode applied to animations
        fillMode: "both",
      },
    },
    backgroundColor: (theme) => ({
      ...theme("colors"),
    }),
  },
  plugins: [require("tailwindcss-animate"), require("./plugins/animation-sequencing")],
}